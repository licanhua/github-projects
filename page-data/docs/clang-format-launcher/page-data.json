{
    "componentChunkName": "component---node-modules-smooth-doc-src-templates-doc-js",
    "path": "/docs/clang-format-launcher/",
    "result": {"data":{"mdx":{"fields":{"pageType":"doc","title":"clang-format-launcher","editLink":""},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"clang-format-launcher\",\n  \"section\": \"Projects\",\n  \"slug\": \"/docs/clang-format-launcher/\",\n  \"order\": 1000\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"clang-format-launcher\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#clang-format-launcher\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"clang-format-launcher\"), mdx(\"p\", null, \"Date: Dec 4, 2021\"), mdx(\"p\", null, \"Keywords: JavaScript, clang-format, clang-format-launcher, C++, Object-C, Java\"), mdx(\"p\", null, \"GitHub: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/licanhua/clang-format-launcher\"\n  }, \"https://github.com/licanhua/clang-format-launcher\")), mdx(\"h2\", {\n    \"id\": \"goal\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#goal\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Goal\"), mdx(\"p\", null, \"Apply clang-format to Microsoft \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/microsoft/adaptivecards\"\n  }, \"Adaptivecards\"), \" project.\\nAdaptivecards is a project covers iOS, Windows and android. Expect a generic tool to work on both Mac and Windows.\\nThe tool will format c++, java and object-c.\"), mdx(\"h2\", {\n    \"id\": \"overview\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#overview\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Overview\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/licanhua/clang-format-launcher\"\n  }, \"clang-format-launcher\"), \" is a clang-format wrapper which is used to launch the clang-format with predefined rules.\\nThis tool is designed for complex project, which \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"glob\"), \" pattern is not enough.\"), mdx(\"p\", null, \"It provides features:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Complex filter rule: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"includeEndsWith\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"excludePathContains\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"excludePathEndsWith\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"excludePathStartsWith\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"style\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Simple command line. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npx clang-format-launcher -verify \"), \" to verify the format, and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npx clang-format-launcher\"), \" to auto fix the format. It's easy to be used in the pipeline\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Only source code is formatted. It automatically skipped buid output and node_modules which are not checked in to the repo.\")), mdx(\"p\", null, \"Here is the idea: \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It first runs \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"git ls-tree\"), \" to get the file list which is checked in.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Apply \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"includeEndsWith\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"excludePathContains\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"excludePathEndsWith\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"excludePathStartsWith\"), \" to filter the files.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Do clang-format check or format based on the existence of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-verify\"), \" flag.\")), mdx(\"h2\", {\n    \"id\": \"how-to-user-it\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-to-user-it\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"How to user it\"), mdx(\"h3\", {\n    \"id\": \"step-1\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#step-1\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 1\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm i --save-dev clang-format clang-format-launcher\\n\")), mdx(\"h3\", {\n    \"id\": \"step-2-prepare-clangformatjson\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#step-2-prepare-clangformatjson\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Step 2 prepare clang.format.json\"), mdx(\"p\", null, \"Assume clang-format-launcher is in ${project}/node_modules/clang-format-launcher, then you should be clang.format.json to ${project}/\"), mdx(\"p\", null, \"Here is an example of clang.format.json:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n  \\\"includeEndsWith\\\": [\\\".h\\\",\\\".cpp\\\"],\\n  \\\"excludePathContains\\\": [\\\"/ios/\\\", \\\"/nodejs/\\\", \\\"/android/\\\"],\\n  \\\"excludePathEndsWith\\\": [\\\".g.h\\\",\\\".g.cpp\\\"],  \\n  \\\"excludePathStartsWith\\\": [],\\n  \\\"folder\\\": \\\"./\\\",\\n  \\\"style\\\": \\\"--style=file\\\"\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"usage\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#usage\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Usage\"), mdx(\"h3\", {\n    \"id\": \"run-scripts-in-packagejson\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#run-scripts-in-packagejson\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run scripts in package.json\"), mdx(\"p\", null, \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run format\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm run verify\"), \"\\n\\\"scripts\\\": {\\n...\\n\\\"format\\\": \\\"clang-format-launcher\\\",\\n\\\"verify\\\": \\\"clang-format-launcher -verify\\\"\\n},\"), mdx(\"h2\", {\n    \"id\": \"run-with-npx\"\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#run-with-npx\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run with npx\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx clang-format-launcher\"), \" \"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npx clang-format-launcher -verify\")), mdx(\"h3\", {\n    \"id\": \"command-details\"\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#command-details\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }, mdx(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"16\",\n    version: \"1.1\",\n    viewBox: \"0 0 16 16\",\n    width: \"16\"\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Command details\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"  npx clang-format-launcher [Options] [other options]\\n\\n    Options:\\n      -raw\\n      -verify \\n\\n  npx clang-format-launcher [other options]\\n    equal to 'npx clang-format --style=file -Werror -i [other options] [Files after filter]'\\n\\n  npx clang-format-launcher -verify [other options]\\n    equal to 'npx clang-format --style=file -Werror --dry-run [other options] [Files after filter]'\\n\\n  npx clang-format-launcher -raw [other options]\\n    equal to 'npx clang-format  [other options]\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#clang-format-launcher","title":"clang-format-launcher"},{"url":"#goal","title":"Goal"},{"url":"#overview","title":"Overview"},{"url":"#how-to-user-it","title":"How to user it","items":[{"url":"#step-1","title":"Step 1"},{"url":"#step-2-prepare-clangformatjson","title":"Step 2 prepare clang.format.json"}]},{"url":"#usage","title":"Usage","items":[{"url":"#run-scripts-in-packagejson","title":"Run scripts in package.json"}]},{"url":"#run-with-npx","title":"Run with npx","items":[{"url":"#command-details","title":"Command details"}]}]}}},"pageContext":{"id":"7034b722-2f2a-58ce-a987-f0043d3677de"}},
    "staticQueryHashes": ["1122327541","1339625561","148928582","2140385554","3442269102","4275725850"]}